//===== rAthena Script =======================================
//= Tablón de misiones SQL
//===== By: ==================================================
//= Rokimoki/Zindokar
//===== Current Version: =====================================
//= 1.0
//===== Compatible With: =====================================
//= rAthena
//===== Description: =========================================
//= Añade misiones repetibles, fijas, con cooldown, o temporales.
//===== Additional Comments: =================================
// 1.0.0 Release
//===== SQL Scripts: =================================
/*
CREATE TABLE `Mision` (
    `id`           INT NOT NULL AUTO_INCREMENT,
    `nombre`       VARCHAR(100) NOT NULL,
    `descripcion`  TEXT NOT NULL,
    `tipo`         ENUM('caza','recoleccion','mixta') NOT NULL, // Hunting, Collecting items, Mixed
    `exp_base`     INT NOT NULL,
    `exp_job`      INT NOT NULL,
    `zeny`         INT NOT NULL,
    `es_temporal`  BOOLEAN NOT NULL DEFAULT FALSE,
    `fecha_inicio` DATETIME NULL,
    `fecha_fin`    DATETIME NULL,
    `es_repetible` BOOLEAN NOT NULL DEFAULT FALSE,
    `cooldown`     INT NOT NULL DEFAULT 0,
    `job`          INT NOT NULL DEFAULT 0,         -- 0 = misión general para cualquier job 
    `nivel_minimo` INT NOT NULL DEFAULT 0,
    `nivel_maximo` INT NOT NULL DEFAULT 0,
    PRIMARY KEY (`id`)
);

CREATE TABLE `ObjetivosMision` (
  `id`                INT NOT NULL AUTO_INCREMENT,
  `id_mision`         INT NOT NULL,
  `tipo`              ENUM('caza','recoleccion') NOT NULL,
  `objetivo_id`       INT NOT NULL,
  `objetivo_cantidad` INT NOT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE `ManejadorMision` (
  `id`            INT NOT NULL AUTO_INCREMENT,
  `id_mision`     INT NOT NULL,
  `id_personaje`  INT NOT NULL,
  `fecha_aceptada`   DATETIME NOT NULL,
  `fecha_entregada`  DATETIME NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE `RecompensaMision` (
  `id`          INT NOT NULL AUTO_INCREMENT,
  `id_mision`   INT NOT NULL,
  `id_objeto`     INT NOT NULL,
  `cantidad`    INT NOT NULL,
  PRIMARY KEY (`id`)
);
*/

moc_para01,33,35,3	script	Tablón de Misiones#0::tablonquest	857,{
	.@npcName$ = "[^FF7700Tablón de Misiones^000000]";
    if (!callfunc("F_HasEdenGroupMark")) {
		mes .@npcName$;
		mes "Aquí encontrarás muchas peticiones de ciudadanos preocupados.";
		mes "Debes pertenecer al Grupo Edén y portar la ^FF0000Marca del Grupo Edén^000000.";
		mes "Solo los aventureros verificados pueden utilizar el tablón.";
		close;
	}
	mes .@npcName$;
	mes "¡Aventureros!, ¡trotamundos!, ¡apúntense para mejorar Rune-Midgard!";
	mes "Aquí encontrarás muchas peticiones de ciudadanos preocupados.";
	mes "Ayúdalos con sus tareas y recibirás recompensas de todo tipo.";
	next;
	switch(select("Buscar misiones disponibles.","Entregar misiones.","Consejos.","Salir.")) {
		case 1:
			// recibe: char_id, job_id, char_level, tipo_mision (caza, recoleccion, mixta)
			.@query$ = callfunc("getMisionesDisponibles", getcharid(0), Class, BaseLevel);
			// devuelve: id, nombre, descripcion, exp_base, exp_job, zeny, es_temporal, fecha_inicio, fecha_fin, es_repetible, cooldown, nivel_minimo, nivel_maximo
			.@nb = query_sql(.@query$, .@id, .@nombre$, .@desc$, .@tipo_mision$, .@exp_base, .@exp_job, .@zeny, .@temporal, .@fecha_inicio, .@fecha_fin, .@repetible, .@cooldown, .@nivel_minimo, .@nivel_maximo);
			if (.@nb) {
				setarray .@questList$[0], "";
				for (.@i = 0; .@i < .@nb; .@i += 1) {
					.@questList$[.@i] = .@nombre$[.@i] + " Lv. [" + .@nivel_minimo[.@i] + "~" + .@nivel_maximo[.@i] + "]";
				}	
				.@selected = select(implode(.@questList$, ":")) - 1;
				mes .@npcName$;
				mes "Misión: ^FF0000" + .@nombre$[.@selected] + "^000000.";
				mes .@desc$[.@selected];
				if (.@repetible[.@selected]) {
					if (.@cooldown[.@selected]) {
							set .@horas, .@cooldown[.@selected] / 3600;
							set .@minutos, (.@cooldown[.@selected] % 3600) / 60;
							set .@segundos, .@cooldown[.@selected] % 60;
							mes "^0000FFEsta misión es repetible^000000 y ^FF0000tiene un cooldown^000000 de " + .@horas + " horas " + .@minutos + " minutos y " + .@segundos + " segundos.";
					} else {
						mes "^0000FFEsta misión es repetible sin cooldown.^000000";
					}
				} else {
					mes "^FF0000Esta misión sólo se puede hacer una vez.^000000";
				}
				next;
				mes .@npcName$;
				// recibe: quest_id
				.@sql$ = callfunc ("getObjetivosMision", .@id[.@selected]);
				// devuelve: tipo, objetivo_id (mob id o item id), objetivo_cantidad
				.@nb = query_sql(.@sql$, .@objetivoTipo$, .@objetivoId, .@objetivoCantidad);
				if (!.@nb) {
					mes "^FF0000Error, no hay objetivos. Contacta con el administador, quest id^000000: ^0000FF" + .@id[.@selected] + "^000000.";
					close;
				}
				if (strcmp(.@tipo_mision$,"caza") == 0) {
					mes "Caza los siguientes monstruos:";
				} else if ((strcmp(.@tipo_mision$,"recoleccion") == 0)) {
					mes "Recolecta los siguientes items:";
				} else {
					mes "Recolecta y Caza lo siguiente:";
				}
				mes "^FF0000-----^000000 ^0000FFObjetivos^000000 ^FF0000----^000000-";
				for (.@i = 0; .@i < .@nb; .@i++) {
					if (strcmp(.@objetivoTipo$[.@i],"caza") == 0) {
						mes "- " + getmonsterinfo(.@objetivoId[.@i], MOB_NAME) + " x" + .@objetivoCantidad[.@i];
					} else {
						mes mesitemicon(.@objetivoId[.@i]) + " | " + mesitemlink(.@objetivoId[.@i]) + "  x" + .@objetivoCantidad[.@i];
					}
				}
				next;
				mes .@npcName$;
				mes "^FF0000-----^000000 ^0000FFRecompensas^000000 ^FF0000----^000000-";
				if (.@exp_base[.@selected]) {
					mes "EXP Base: " + .@exp_base[.@selected];
				}
				if (.@exp_job[.@selected]) {
					mes "EXP Job: " + .@exp_job[.@selected];
				}
				if (.@zeny[.@selected]) {
					mes "Zeny: " + .@zeny[.@selected];
				}
				.@query$ = callfunc("getRecompensasExtras", .@id[.@selected]);
				// recibe: quest_id
				.@nb = query_sql(.@query$, .@item_id, .@cantidad);
				// devuelve: id_objeto, cantidad
				if (.@nb) {
					for (.@i = 0; .@i < .@nb; .@i += 1) {
						mes mesitemicon(.@item_id[.@i]) + " | " + mesitemlink(.@item_id[.@i]) + "  x" + .@cantidad[.@i];
					}
				}
				next;
				mes .@npcName$;
				mes "¿Aceptas la misión?";
				next;
				if (select("Sí", "No") == 2) {
					mes .@npcName$;
					mes "Vuelve cuando quieras.";
					close;
				}
				.@sql$ = callfunc("asignarMision", .@id[.@selected], getcharid(0));
				query_sql(.@sql$);
				if (strcmp(.@tipo_mision$,"caza") == 0 || (strcmp(.@tipo_mision$,"mixta") == 0)) {
					.@newQuestPosition = getarraysize(questIdList);
					questIdList[.@newQuestPosition] = .@id[.@selected];
					for (.@i = 0; .@i < getarraysize(.@objetivoId); .@i += 1) {
						if (strcmp(.@objetivoTipo$[.@i],"caza") == 0) {
							setd("questMonsterId_" + .@id[.@selected] + "[" + .@i + "]", .@objetivoId[.@i]);
							setd("questMonsterAmount_" + .@id[.@selected] + "[" + .@i + "]", .@objetivoCantidad[.@i]);
							setd("questMonsterKillCount_" + .@id[.@selected] + "[" + .@i + "]", 0);
							dispbottom "Asignando misión de caza: " + getmonsterinfo(.@objetivoId[.@i], MOB_NAME) + " x" + .@objetivoCantidad[.@i];
						}
					}
				}
			} else {
				mes .@npcName$;
				mes "No hay misiones disponibles de momento.";
			}
			close;
			
		case 2:
			mes .@npcName$;
			mes "Vamos a ver qué misiones tienes pendientes...";
			next;
			.@sql$ = callfunc("getMisionesPendientes", getcharid(0));
			.@nb = query_sql(.@sql$, .@id, .@nombre$, .@tipo$);
			if (!.@nb) {
				mes .@npcName$;
				mes "No tienes misiones pendientes.";
				close;
			}
			setarray .@questList$[0], "";
			for (.@i = 0; .@i < .@nb; .@i++) {
				.@questList$[.@i] = "[" + strtoupper(.@tipo$[.@i]) + "] " + .@nombre$[.@i];
			}
			.@selected = select(implode(.@questList$, ":")) - 1;
			.@idMision = .@id[.@selected];
			.@tipoMision$ = .@tipo$[.@selected];
			mes .@npcName$;
			mes "Entregando: " + .@nombre$[.@selected];
			mes "Vamos a comprobar que cumplas los requisitos de la misión.";
			next;
			.@sql$ = callfunc("getObjetivosMision", .@idMision);
			.@nb = query_sql(.@sql$, .@objetivoTipo$, .@objetivoId, .@objetivoCantidad);
			.@cumpleRequisitos = 1;
			if (.@tipoMision$ == "recoleccion" || .@tipoMision$ == "mixta") {
				mes "^0000FFRecuento de objetos:^000000";
				for (.@i = 0; .@i < .@nb; .@i++) {
					if (.@objetivoTipo$[.@i] == "recoleccion") {
						.@cuenta = countitem(.@objetivoId[.@i]);
						mes "- Llevas: " + getitemname(.@objetivoId[.@i]) + ": ^FF7700" + .@cuenta + "/" + .@objetivoCantidad[.@i] + "^000000";
						if (.@cuenta < .@objetivoCantidad[.@i]) .@cumpleRequisitos = 0;
					}
				}
			}
			if (.@tipoMision$ == "caza" || .@tipoMision$ == "mixta") {
				mes "^0000FFRecuento de monstruos cazados:^000000";
				for (.@i = 0; .@i < .@nb; .@i++) {
					if (.@objetivoTipo$[.@i] == "caza") {
						.@size = getarraysize(getd("questMonsterId_" + .@idMision));
						.@found = 0;
						for (.@j = 0; .@j < .@size; .@j++) {
							if (getd("questMonsterId_" + .@idMision + "[" + .@j + "]") == .@objetivoId[.@i]) {
								.@found = 1;
								.@killCount = getd("questMonsterKillCount_" + .@idMision + "[" + .@j + "]");
								mes "- " + getmonsterinfo(.@objetivoId[.@i], MOB_NAME) + ": ^FF7700" + .@killCount + "/" + .@objetivoCantidad[.@i] + "^000000";
								if (.@killCount < .@objetivoCantidad[.@i]) .@cumpleRequisitos = 0;
							}
						}
						if (!.@found) {
							.@cumpleRequisitos = 0;
						}
					}
				}
			}
			if (!.@cumpleRequisitos) {
				mes "^FF0000No cumples aún con todos los requisitos.^000000";
				close;
			}
			mes "^00AA00¡Has cumplido todos los objetivos!^000000";
			mes "^FF0000---^000000 ^0000FFRecomensas obtenidas^000000 ^FF0000---^000000-";
			.@sql$ = callfunc("getRecompensasMision", .@idMision);
			query_sql(.@sql$, .@exp_base, .@exp_job, .@zeny);
			if (.@exp_base) { 
				getexp .@exp_base, 0; 
				mes "EXP Base: ^FF7700" + .@exp_base + "^000000"; 
			}
			if (.@exp_job) { 
				getexp 0, .@exp_job; 
				mes "EXP Job: ^FF7700" + .@exp_job + "^000000"; 
			}
			if (.@zeny) { 
				Zeny += .@zeny; 
				mes "Zeny: ^FF7700"+.@zeny+"^000000"; 
			}
			.@sql$ = callfunc("getRecompensasExtras", .@idMision);
			.@nb_rewards = query_sql(.@sql$, .@item_id, .@cantidad);
			for (.@i = 0; .@i < .@nb_rewards; .@i++) {
				getitem .@item_id[.@i], .@cantidad[.@i];
				mes "Objeto: " + getitemname(.@item_id[.@i]) + " x^FF7700" + .@cantidad[.@i] + "^000000";
			}
			.@sql$ = callfunc("entregarMision", .@idMision, getcharid(0));
			query_sql(.@sql$);
			deletearray(getd("questMonsterId_" + .@idMision));
			deletearray(getd("questMonsterAmount_" + .@idMision));
			deletearray(getd("questMonsterKillCount_" + .@idMision));
			for (.@k = 0; .@k < getarraysize(questIdList); .@k++) {
				if (questIdList[.@k] == .@idMision) {
					deletearray questIdList[.@k], 1;
					break;
				}
			}
			close;
			
		case 3:
			mes .@npcName$;
			mes "Puedes utilizar el sistema de navegación para buscar dónde están ubicados los monstruos a cazar.";
			mes "Recolecta " + mesitemicon(6909) + " " + mesitemlink(6909, true, "Miau Fruto") + " para poder utilizar el sistema de teletransporte del menú de navegación.";
			next;
			mes .@npcName$;
			mes "- Las misiones repetibles tienen 1 día de cooldown.";
			mes "- Puedes aceptar tantas misiones como tengas disponible.";
			mes "- Puedes entregarlas aunque salgas del rango de nivel.";
			close;
			
		case 4:
			mes .@npcName$;
			mes "Vuelve cuando quieras, trotamundos";
			close;
	}
	
    OnInit:
        //function getMisionesDisponibles; // devuelve: id, nombre, descripcion, tipo, exp_base, exp_job, zeny, es_temporal, fecha_inicio, fecha_fin, es_repetible, cooldown, job, nivel_minimo, nivel_maximo
        //function getMisionesDisponiblesEnCd; // devuelve: id, nombre,, tipo, cooldown_segundos, ultima_entrega, disponible_a, tiempo_restante
        //function getMisionesPendientes; // devuelve: mision_id, nombre, tipo, manejador_id
        //function getMisionesCompletadas; // devuelve: id, nombre, tipo, fecha_entrega, fecha_completada
        //function getObjetivosMision; // devuelve: tipo, objetivo_id (mob id o item id), objetivo_cantidad
        //function entregarMision; // actualiza el registro de misiones y completa actualizando fecha de entrega
        //function getRecompensasMision; // devuelve: exp_base, exp_job, zeny
        //function getRecompensasExtras; // devuelve: id_objeto, cantidad

    end;

	OnNPCKillEvent:
		for (.@m = 0; .@m < getarraysize(questIdList); .@m++) {
			.@idMisionActual = questIdList[.@m];
			.@size = getarraysize(getd("questMonsterId_" + .@idMisionActual));
			for (.@i = 0; .@i < .@size; .@i++) {
				if (killedrid == getd("questMonsterId_" + .@idMisionActual + "[" + .@i + "]")) {
					.@varKillCount$ = "questMonsterKillCount_" + .@idMisionActual + "[" + .@i + "]";
					.@varAmountNeeded$ = "questMonsterAmount_" + .@idMisionActual + "[" + .@i + "]";
					if (getd(.@varKillCount$) < getd(.@varAmountNeeded$)) {
						setd(.@varKillCount$, getd(.@varKillCount$) + 1);
						dispbottom "[Cazando] " + getmonsterinfo(killedrid, MOB_NAME) + " (" + getd(.@varKillCount$) + "/" + getd(.@varAmountNeeded$) + ")", 0xFFFFFF;
					}
					if (getd(.@varKillCount$) == getd(.@varAmountNeeded$)) {
						dispbottom "^00CC00¡Has completado un objetivo de misión!:^000000 " + getmonsterinfo(killedrid, MOB_NAME), 0xFFFFFF;
					}
				}
			}
		}
	end;
}

/**
* Get obtainable quest list by char_id, job_id, char_level
*/
function	script	getMisionesDisponibles	{
	.@char_id = getarg(0);
	.@job_id = getarg(1);
	.@char_level = getarg(2);

	.@sql$ = "" +
		"SELECT " +
		"  M.id, " +
		"  M.nombre, " +
		"  M.descripcion, " +
		"  M.tipo, " + 
		"  M.exp_base, " +
		"  M.exp_job, " +
		"  M.zeny, " +
		"  M.es_temporal, " +
		"  M.fecha_inicio, " +
		"  M.fecha_fin, " +
		"  M.es_repetible, " +
		"  M.cooldown, " +
		"  M.nivel_minimo, " +
		"  M.nivel_maximo " +
		"FROM " +
		"	  Mision AS M " +
		"WHERE " +
		"	 (M.job = 0 OR M.job = " + .@job_id + ") " +
		"AND " +
		"    (" + .@char_level + " BETWEEN M.nivel_minimo AND M.nivel_maximo) " +
		"AND " +
		"    NOT EXISTS ( " +
		"        SELECT 1 " +
		"        FROM ManejadorMision mm " +
		"        WHERE mm.id_mision = M.id " +
		"        AND mm.id_personaje = " + .@char_id + " " +
		"        AND mm.fecha_entregada IS NULL " +
		"    ) " +
		"AND " +
		"    NOT ( " +
		"        M.es_repetible = FALSE " +
		"        AND EXISTS ( " +
		"            SELECT 1 " +
		"            FROM ManejadorMision mm2 " +
		"            WHERE mm2.id_mision = M.id " +
		"            AND mm2.id_personaje = " + .@char_id + " " +
		"            AND mm2.fecha_entregada IS NOT NULL " +
		"        ) " +
		"    ) " +
		"AND " +
		"    NOT ( " +
		"        M.cooldown > 0 " +
		"        AND EXISTS ( " +
		"            SELECT 1 " +
		"            FROM ManejadorMision mm3 " +
		"            WHERE mm3.id_mision = M.id " +
		"            AND mm3.id_personaje = " + .@char_id + " " +
		"            AND mm3.fecha_entregada IS NOT NULL " +
		"            AND mm3.fecha_entregada > DATE_SUB(NOW(), INTERVAL M.cooldown SECOND) " +
		"        ) " +
		"    ) " +
		"AND " +
		"    (M.es_temporal = FALSE " +
		"        OR (NOW() BETWEEN M.fecha_inicio AND M.fecha_fin) " +
		"    );";

	return .@sql$;
}

/**
* Get obtainable quest list on cooldown by char_id
*/
function	script	getMisionesDisponiblesEnCd	{
	.@char_id = getarg(0);

	.@sql$ = ""+
	"    SELECT " +
	"        M.id, " +
	"        M.nombre, " +
	"        M.cooldown AS cooldown_segundos, " +
	"        h.last_entrega AS ultima_entrega, " +
	"    DATE_ADD(h.last_entrega, INTERVAL M.cooldown SECOND) AS disponible_a, " +
	"    TIMEDIFF( " +
	"            DATE_ADD(h.last_entrega, INTERVAL M.cooldown SECOND), NOW() " +
	"    ) AS tiempo_restante " +
	"    FROM " +
	"        Mision M " +
	"    JOIN ( " +
	"        SELECT " +
	"            id_mision, " +
	"        MAX(fecha_entregada) AS last_entrega " +
	"        FROM " +
	"            ManejadorMision " +
	"        WHERE " +
	"            id_personaje = " + .@char_id + " " +
	"        AND fecha_entregada IS NOT NULL " +
	"        GROUP BY id_mision " +
	"    ) AS h ON M.id = h.id_mision " +
	"    WHERE " +
	"        M.cooldown  > 0 " +
	"    AND DATE_ADD(h.last_entrega, INTERVAL M.cooldown SECOND) > NOW();";

	return .@sql$;
}

/**
* Get on progress quest list by char_id
*/
function	script	getMisionesPendientes	{
	.@char_id = getarg(0);
	
	.@sql$ = "" + 
		"   SELECT " +
		"       M.id as mision_id, " +
		"       M.nombre, " +
		"       M.tipo, " +
		"       mm.id as manejador_id " +
		"   FROM " +
		"       Mision M " +
		"   JOIN " +
		"       ManejadorMision mm ON mm.id_mision = M.id " +
		"   WHERE " +
		"       mm.id_personaje = " + .@char_id + " " +
		"   AND " +
		"       mm.fecha_entregada IS NULL;";

	return .@sql$;
}

/**
* Get completed quest list by char_id
*/
function	script	getMisionesCompletadas	{
	.@char_id = getarg(0);

	.@sql$ = "" + 
		"   SELECT " +
		"       M.id, " +
		"       M.nombre, " +
		"       M.tipo, " +
		"       mm.fecha_aceptada, " +
		"       mm.fecha_entregada " +
		"   FROM " +
		"       ManejadorMision AS mm " +
		"   JOIN Mision AS M " +
		"       ON M.id = mm.id_mision " +
		"   WHERE " +
		"       mm.id_personaje = " + .@char_id + " " +
		"       AND mm.fecha_entregada IS NOT NULL;";

	return .@sql$;
}

/**
* Get objectives list from quest quest_id
*/
function	script	getObjetivosMision	{
	.@quest_id = getarg(0);

	.@sql$ = "" +
	"   SELECT " +
	"       tipo, " +
	"       objetivo_id, " +
	"       objetivo_cantidad " +
	"   FROM " +
	"       ObjetivosMision " +
	"   WHERE " +
	"       id_mision = " + .@quest_id + ";";

	return .@sql$;
}

/**
* Assign quest to a character
*/
function	script	asignarMision	{
	.@quest_id = getarg(0);
	.@char_id = getarg(1);

	.@sql$ = "" +
	"	INSERT INTO `ManejadorMision` " +
	"	(`id_mision`, `id_personaje`, `fecha_aceptada`) " +
	"	VALUES  " +
	"		(" + .@quest_id + ", " + .@char_id + ", NOW());";

	return .@sql$;
}

/**
* Turn in an ongoing quest by quest and char id
*/
function	script	entregarMision	{
	.@quest_id = getarg(0);
	.@char_id = getarg(1);

	.@sql$ = "" + 
		"   UPDATE ManejadorMision " +
		"   SET fecha_entregada = NOW() " +
		"   WHERE id_mision     = " + .@quest_id + " " +
		"   AND id_personaje    = " + .@char_id + " " +
		"   AND fecha_entregada IS NULL;";

	return .@sql$;
}

/**
* Receive quest rewards by quest_id (base exp, job exp and zeny)
*/
function	script	getRecompensasMision	{
	.@quest_id = getarg(0);

	.@sql$ = ""+
		"   SELECT " + 
		"       exp_base, " + 
		"       exp_job, " + 
		"       zeny " + 
		"   FROM " + 
		"       Mision " + 
		"   WHERE " + 
		"       id = " + .@quest_id + ";";

	return .@sql$;
}

/**
* Receive extra quest rewards by quest_id (if any in MisionRecompensas table)
*/
function	script	getRecompensasExtras	{
	.@quest_id = getarg(0);

	.@sql$ = "" +
		"   SELECT " + 
		"       id_objeto, " + 
		"       cantidad " + 
		"   FROM " + 
		"       RecompensaMision " + 
		"   WHERE " + 
		"       id_mision = " + .@quest_id  + ";";

	return .@sql$;
}